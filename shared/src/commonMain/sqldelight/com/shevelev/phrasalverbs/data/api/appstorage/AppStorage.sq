/**
One card
*/
CREATE TABLE card (
    card_id INTEGER NOT NULL PRIMARY KEY,
    is_learnt INTEGER
);

createCard:
INSERT INTO card(card_id, is_learnt)
VALUES (?, ?);

readAllCards:
SELECT *  FROM card;

updateCardColor:
UPDATE card SET is_learnt = ? WHERE card_id = ?;

/**
A card's side
*/
CREATE TABLE card_side (
    card_side_id INTEGER NOT NULL PRIMARY KEY,
    card_id INTEGER NOT NULL,
    language_code INTEGER NOT NULL
);

CREATE INDEX card_side_link ON card_side(card_id);

createCardSide:
INSERT INTO card_side(card_side_id, card_id, language_code)
VALUES (?, ?, ?);

readCardSide:
SELECT *  FROM card_side WHERE card_id = ?;

/**
One element of content in a card's side
This is a list of possible values for the field 'type':
0 - clarfication
1 - main content
2 - example
*/
CREATE TABLE card_side_content_item (
    card_side_content_item_id INTEGER NOT NULL PRIMARY KEY,
    card_side_id INTEGER NOT NULL,
    type INTEGER NOT NULL,
    value TEXT NOT NULL,
    value_voicing TEXT,
    description TEXT,
    sort_order INTEGER NOT NULL
);

CREATE INDEX card_side_content_item_link ON card_side_content_item(card_side_id);

createCardSideContentItem:
INSERT INTO card_side_content_item(card_side_content_item_id, card_side_id, type, value, value_voicing, description, sort_order)
VALUES (?, ?, ?, ?, ?, ?, ?);

readCardSideContentItems:
SELECT *  FROM card_side_content_item WHERE card_side_id = ?;


/**
A group of cards
*/
CREATE TABLE bunch (
    bunch_id INTEGER NOT NULL PRIMARY KEY,
    title TEXT NOT NULL
);

createBunch:
INSERT INTO bunch(bunch_id, title)
VALUES (?, ?);

readAllBunches:
SELECT *  FROM bunch;

readBunch:
SELECT *  FROM bunch WHERE bunch_id = ?;

deleteBunch:
DELETE FROM bunch WHERE bunch_id = ?;


/**
A link between cards and groups
*/
CREATE TABLE card_bunch (
    card_id INTEGER NOT NULL,
    bunch_id INTEGER NOT NULL,
    sort_order INTEGER NOT NULL
);

CREATE INDEX card_bunch_index ON card_bunch(bunch_id);

createCardBunch:
INSERT INTO card_bunch(card_id, bunch_id, sort_order)
VALUES (?, ?, ?);

readCardBunch:
SELECT *  FROM card_bunch WHERE bunch_id = ?;

deleteCardBunch:
DELETE FROM card_bunch WHERE bunch_id = ?;

/**
A key for the key-value storage
*/
CREATE TABLE key (
    key_id INTEGER NOT NULL PRIMARY KEY,
    key TEXT NOT NULL,
    bunch TEXT NOT NULL,
    type INTEGER NOT NULL,
    single INTEGER NOT NULL DEFAULT 0
);

CREATE INDEX key_search_index ON key(key, bunch);

/**
A value for the key-value storage
*/
CREATE TABLE value (
    value_id INTEGER NOT NULL PRIMARY KEY,
    key_id INTEGER NOT NULL,
    value TEXT NOT NULL,
    sort_order INTEGER NOT NULL
);

CREATE INDEX value_link_index ON value(key_id);

createKey:
INSERT INTO key(key_id, key, bunch, type, single)
VALUES (?, ?, ?, ?, ?);

createValue:
INSERT INTO value(value_id, key_id, value, sort_order)
VALUES (?, ?, ?, ?);

readKey:
SELECT key_id, type, single FROM key WHERE key = ? AND bunch = ?;

readCombinedList:
SELECT k.type, k.single, v.value FROM key k INNER JOIN value v
ON k.key_id = v.key_id
WHERE k.key = ? AND k.bunch = ?
ORDER BY sort_order;

readValuesList:
SELECT value FROM value WHERE key_id = ? ORDER BY sort_order;

updateKey:
UPDATE key SET type = ?, single = ? WHERE key_id = ?;

updateValue:
UPDATE value SET value = ? WHERE key_id = ?;

deleteKey:
DELETE FROM key WHERE key_id = ?;

deleteValue:
DELETE FROM value WHERE key_id = ?;
